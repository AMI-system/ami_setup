# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command

# Create that creates a new witty pi weekly schedule based on Sundays
5 0 * * * sudo python3 /home/pi/scripts/wpi_script_generator_ags.py

5 21 * * 1,3,5 sudo python3 /home/pi/scripts/update_motion_config.py && sudo python3 /home/pi/scripts/control_ON_lights.py && sudo motion -m # motion on
13 4 * * 2,4,6 sudo pkill motion && sudo python3 /home/pi/scripts/control_OFF_lights.py # motion off

7-59/5 21 * * 1,2,4,6 sudo python3 /home/pi/scripts/bats_recording.py # bats sunset 1
2-59/5 22-23 * * 1,2,4,6 sudo python3 /home/pi/scripts/bats_recording.py # bats sunset 2
2-59/5 0-4 * * 0,2,3,5 sudo python3 /home/pi/scripts/bats_recording.py # bats sunrise 1
2-13/5 5 * * 0,2,3,5 sudo python3 /home/pi/scripts/bats_recording.py # bats sunrise 2

*/5 12-23 * * 2,4,6 sudo python3 /home/pi/scripts/birds_recording.py # birds 1
*/5 0-11 * * 0,3,5 sudo python3 /home/pi/scripts/birds_recording.py # birds 2

